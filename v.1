#include<stdio.h>
#define size 10
#define EQU(a,b) (a.x==b.x && a.y==b.y)


typedef struct axis
{
    int x;
    int y;
}Axis;

typedef struct stack{
    Axis elements[size*size];
    int top;
}Stack;

int isEmpty(Stack *stackptr){
    if(stackptr->top==-1)
        return 1;
    return 0;
}

Axis pop(Stack *stackptr){
    Axis temp={-1,-1};
    if(isEmpty(stackptr))
        return temp;
    temp = stackptr->elements[stackptr->top];
    stackptr->top--;
    return temp;
}
void push(Stack *stackptr, Axis element){
    stackptr->top;
    stackptr->top++;
    stackptr->elements[stackptr->top]=element;
}

Axis Can_move(Stack *stackptr,Axis position){
    for(int dx=-1;dx<=1;dx++){
        for(int dy=-1;dy<=1;dy++){
            if(!(dx==0 && dy==0)){
                Axis space;
                space.x=position.x+dx;
                space.y=position.y+dy;
                if(maze[space.x][space.y]==0 && mark[space.x][space.y]!='*'){
                    mark[space.x][space.y]='*';
                    push(stackptr,space);
                }
            }
        }
    }
    return pop(stackptr);
}

char maze[size][size] ={
    { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
    { 0, 0, 0, 1, 1, 0, 1, 1, 0, 1 },
    { 1, 0, 1, 1, 0, 0, 0, 0, 0, 1 },
    { 1, 0, 0, 0, 0, 1, 0, 1, 0, 1 },
    { 1, 1, 1, 0, 1, 1, 0, 1, 1, 1 },
    { 1, 0, 1, 1, 1, 0, 0, 1, 0, 1 },
    { 1, 0, 0, 0, 0, 0, 1, 1, 0, 0 },
    { 1, 0, 1, 1, 1, 1, 1, 0, 0, 1 },
    { 1, 0, 0, 0, 1, 0, 0, 0, 1, 1 },
    { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 }
    };
char mark[size][size]={0};

int main(){
    
    Stack stack1;
    Axis now;
    stack1.top=-1;
    Axis enter={1,0};
    Axis exit={6,9};
    Axis none={-1,-1};
    now=enter;
    mark[now.x][now.y]='*';

    while(!(EQU(now,exit))){
        now=Can_move(&stack1,now);
        if(EQU(now,none)){
            printf("沒有出口");
            break;
        }
        printf("移動到 %d %d\n",now.x,now.y);
    }
    return 0;
}
